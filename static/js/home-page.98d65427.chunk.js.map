{"version":3,"sources":["servieces/movies-api.js","components/MovieList/MovieList.module.scss","components/MovieList/MovieList.js","pages/HomePage.js"],"names":["BASE_URL","MY_KEY","moviesApi","fetchMovies","axios","get","then","response","data","results","searchMovies","searchQuery","searchMovieDetailsById","id","searchMovieCastById","cast","searchMovieReviewsById","module","exports","withRouter","movies","location","className","styles","list","map","movie","link","to","pathname","state","from","search","title","name","HomePage","a","this","setState","console","log","length","Component"],"mappings":"yIAAA,qBACMA,EAAW,+BACXC,EAAS,mCAETC,EAAY,CAChBC,YADgB,WAEd,OAAOC,IACJC,IADI,UACGL,EADH,qCACwCC,IAC5CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGpCC,aAPgB,SAOHC,GACX,OAAOP,IACJC,IADI,UAEAL,EAFA,iCAEiCC,EAFjC,kBAEiDU,EAFjD,+CAIJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAEpCG,uBAdgB,SAcOC,GACrB,OAAOT,IACJC,IADI,UACGL,EADH,kBACqBa,EADrB,oBACmCZ,EADnC,oBAEJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BM,oBAnBgB,SAmBID,GAClB,OAAOT,IACJC,IADI,UACGL,EADH,kBACqBa,EADrB,4BAC2CZ,EAD3C,oBAEJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKO,SAEpCC,uBAxBgB,SAwBOH,GACrB,OAAOT,IACJC,IADI,UAEAL,EAFA,kBAEkBa,EAFlB,4BAEwCZ,EAFxC,2BAIJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,aAGvBP,O,mBCnCfe,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,0B,4GCmCzCC,eAhCG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,SAAUV,EAAkB,EAAlBA,YACrC,OACE,oBAAIW,UAAWC,IAAOC,KAAtB,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEJ,UAAWC,IAAOI,KAClBC,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMb,IAC3BiB,MAAO,CAAEC,KAAMV,GACfW,OAAQrB,GALZ,UAQQ,OAALe,QAAK,IAALA,OAAA,EAAAA,EAAOO,QAASP,EAAMQ,QATlBR,EAAMb,a,kICHjBsB,E,4MACJL,MAAQ,CACNV,OAAQ,I,8FAEV,4BAAAgB,EAAA,+EAEuBlC,IAAUC,cAFjC,OAEUK,EAFV,OAGI6B,KAAKC,SAAS,CAAElB,OAAQZ,IAH5B,gDAKI+B,QAAQC,IAAR,MALJ,yD,0EAQA,WACE,IAAQpB,EAAWiB,KAAKP,MAAhBV,OACR,OACE,mCACGA,EAAOqB,OAAS,GACf,sBAAKnB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,6BACA,cAAC,IAAD,CAAWF,OAAQA,a,GAnBRsB,aA+BRP","file":"static/js/home-page.98d65427.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst MY_KEY = '92dbea49aa4406146839d70707aaf148';\r\n\r\nconst moviesApi = {\r\n  fetchMovies() {\r\n    return axios\r\n      .get(`${BASE_URL}/trending/all/day?api_key=${MY_KEY}`)\r\n      .then(response => response.data.results);\r\n  },\r\n\r\n  searchMovies(searchQuery) {\r\n    return axios\r\n      .get(\r\n        `${BASE_URL}/search/movie?api_key=${MY_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`,\r\n      )\r\n      .then(response => response.data.results);\r\n  },\r\n  searchMovieDetailsById(id) {\r\n    return axios\r\n      .get(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}&language=en-US`)\r\n      .then(response => response.data);\r\n  },\r\n  searchMovieCastById(id) {\r\n    return axios\r\n      .get(`${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`)\r\n      .then(response => response.data.cast);\r\n  },\r\n  searchMovieReviewsById(id) {\r\n    return axios\r\n      .get(\r\n        `${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US&page=1`,\r\n      )\r\n      .then(response => response.data.results);\r\n  },\r\n};\r\nexport default moviesApi;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"MovieList_list__2S-Ec\",\"link\":\"MovieList_link__3Qn78\"};","import { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MovieList.module.scss';\r\n\r\nconst MovieList = ({ movies, location, searchQuery }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {movies.map(movie => (\r\n        <li key={movie.id}>\r\n          <Link\r\n            className={styles.link}\r\n            to={{\r\n              pathname: `/movies/${movie.id}`,\r\n              state: { from: location },\r\n              search: searchQuery,\r\n            }}\r\n          >\r\n            {movie?.title || movie.name}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  searchQuery: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moviesApi from '../servieces/movies-api';\r\nimport MovieList from '../components/MovieList';\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await moviesApi.fetchMovies();\r\n      this.setState({ movies: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <>\r\n        {movies.length > 0 && (\r\n          <div className=\"container\">\r\n            <h1 className=\"title\"> Trending today</h1>\r\n            <MovieList movies={movies} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nHomePage.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}