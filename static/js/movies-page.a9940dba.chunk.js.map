{"version":3,"sources":["servieces/movies-api.js","components/MovieList/MovieList.js","components/Searchbar/Searchbar.js","pages/MoviesPage.js"],"names":["BASE_URL","MyKey","fetchMovies","axios","get","then","response","data","results","searchMovies","searchQuery","searchMovieDetailsById","id","withRouter","movies","map","movie","to","title","name","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPage","onChangeQuery","prevProps","prevState","a","moviesApi","length","MovieList"],"mappings":"yIAAA,qBACMA,EAAW,+BACXC,EAAQ,mCAqBC,KAAEC,YAnBG,WAClB,OAAOC,IACJC,IADI,UACGJ,EADH,qCACwCC,IAC5CI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAgBNC,aAbT,SAAAC,GACnB,OAAOP,IACJC,IADI,UAEAJ,EAFA,iCAEiCC,EAFjC,kBAEgDS,EAFhD,+CAIJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAQQG,uBALb,SAAAC,GAC7B,OAAOT,IACJC,IADI,UACGJ,EADH,kBACqBY,EADrB,oBACmCX,EADnC,oBAEJI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,2FCIhBM,eAtBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,6BACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAMJ,IAA3B,UAAuC,OAALI,QAAK,IAALA,OAAA,EAAAA,EAAOE,QAASF,EAAMG,QADjDH,EAAMJ,a,0HCwBRQ,E,4MA3BbC,MAAQ,CACNC,MAAO,I,EAETC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAME,cAAcC,S,EAE7CC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAEzB,WACE,OACE,uBAAMS,SAAUC,KAAKJ,aAArB,UACE,uBACEK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAUL,KAAKT,eAEjB,wBAAQU,KAAK,SAAb,2B,GAtBgBK,a,QCGlBC,E,4MACJlB,MAAQ,CACNP,OAAQ,GACRJ,YAAa,I,EAEf8B,cAAgB,SAAAlB,GACd,EAAKG,SAAS,CACZf,YAAaY,K,+FAGjB,WAAyBmB,EAAWC,GAApC,iBAAAC,EAAA,yDACMD,EAAUhC,cAAgBsB,KAAKX,MAAMX,YAD3C,uBAEYA,EAAgBsB,KAAKX,MAArBX,YAFZ,SAGuBkC,IAAUnC,aAAaC,GAH9C,OAGUH,EAHV,OAIIyB,KAAKP,SAAS,CAAEX,OAAQP,IAJ5B,gD,6EAQA,WACE,IAAQO,EAAWkB,KAAKX,MAAhBP,OAER,OACE,qCACE,cAAC,EAAD,CAAWiB,SAAUC,KAAKQ,gBACzB1B,EAAO+B,OAAS,GAAK,cAACC,EAAA,EAAD,CAAWhC,OAAQA,W,GAxBxBwB,aAgCVC","file":"static/js/movies-page.a9940dba.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst MyKey = '92dbea49aa4406146839d70707aaf148';\r\n\r\nconst fetchMovies = () => {\r\n  return axios\r\n    .get(`${BASE_URL}/trending/all/day?api_key=${MyKey}`)\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst searchMovies = searchQuery => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}/search/movie?api_key=${MyKey}&query=${searchQuery}&language=en-US&page=1&include_adult=false`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst searchMovieDetailsById = id => {\r\n  return axios\r\n    .get(`${BASE_URL}/movie/${id}?api_key=${MyKey}&language=en-US`)\r\n    .then(response => response.data);\r\n};\r\nexport default { fetchMovies, searchMovies, searchMovieDetailsById };\r\n","import { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <ul>\r\n      {movies.map(movie => (\r\n        <li key={movie.id}>\r\n          <Link to={`/movies/${movie.id}`}>{movie?.title || movie.name}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from 'react';\r\n//import styles from './Searchbar.module.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n  handleChange = event => {\r\n    this.setState({ query: event.currentTarget.value });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport moviesApi from '../servieces/movies-api';\r\nimport Searchbar from '../components/Searchbar';\r\nimport MovieList from '../components/MovieList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    searchQuery: '',\r\n  };\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n    });\r\n  };\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      const { searchQuery } = this.state;\r\n      const data = await moviesApi.searchMovies(searchQuery);\r\n      this.setState({ movies: data });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        {movies.length > 0 && <MovieList movies={movies} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// MoviesPage.propTypes = {};\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}